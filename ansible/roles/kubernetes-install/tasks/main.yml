- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.crt"
  register: kubeadm_ca
  become: true

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster
  when: not kubeadm_ca.stat.exists
  become: true

- name: Init Kubernetes cluster
  shell: "kubeadm init --pod-network-cidr 100.64.0.0/10 --upload-certs --control-plane-endpoint=k8s.internal:6443 --apiserver-advertise-address=10.0.10.6"
  register: init_cluster
  become: true
  delegate_to: "{{ groups['init-master'][0] }}"
  run_once: true
  when:
    - not kubeadm_ca.stat.exists
    - inventory_hostname in groups['init-master']

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory
  when: inventory_hostname in groups['master'] or inventory_hostname in groups['init-master']

- name: Copy admin.conf to Home directory
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true
  when: inventory_hostname in groups['master'] or inventory_hostname in groups['init-master']
  become: true

- name: Apply a calico manifset to init the pod network
  shell: "kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml"
  when:
    - not kubeadm_ca.stat.exists
    - inventory_hostname in groups['init-master']
  delegate_to: "{{ groups['init-master'][0] }}"
  run_once: true

- name: Retrieve Kubernetes join command that is used to join worker node(s)
  command: "kubeadm token create --print-join-command"
  register: join_command
  delegate_to: "{{ groups['init-master'][0] }}"
  run_once: true
  when:
    - not kubeadm_ca.stat.exists
  
- name: Join the Worker node to the cluster.
  become: yes
  when:
    - not kubeadm_ca.stat.exists
    - inventory_hostname in groups['worker']
  command: "{{ join_command.stdout_lines[0] }}"

- name: Join the Ingress node to the cluster.
  become: yes
  when:
    - not kubeadm_ca.stat.exists
    - inventory_hostname in groups['ingress']
  command: "{{ join_command.stdout_lines[0] }}"

- name: add label worker on worker.
  when:
    - inventory_hostname in groups['worker']
  command: "kubectl label node {{ ansible_host }} node-role.kubernetes.io/worker=true"
  delegate_to: "{{ groups['init-master'][0] }}"

- name: add label worker on ingress.
  when:
    - inventory_hostname in groups['ingress']
  command: "kubectl label node {{ ansible_host }} node-role.kubernetes.io/gateway=true"
  delegate_to: "{{ groups['init-master'][0] }}"

- name: Calculate kubeadm CA cert hash
  shell: set -o pipefail && openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  args:
    executable: /bin/bash
  register: kubeadm_ca_hash
  delegate_to: "{{ groups['init-master'][0] }}"
  become: yes
  run_once: true

- name: Create kubeadm token for joining nodes with 24h expiration (default)
  command: "kubeadm token create"
  register: temp_token
  delegate_to: "{{ groups['init-master'][0] }}"
  run_once: true

- name: Create kubeadm cert for joining nodes with 24h expiration (default)
  shell: "kubeadm init phase upload-certs --upload-certs | tail -n 1"
  register: temp_cert
  become: yes
  delegate_to: "{{ groups['init-master'][0] }}"
  run_once: true

- name: Cluster join - master
  ansible.builtin.command: 'kubeadm join k8s.internal:6443 --token "{{temp_token.stdout}}" --discovery-token-ca-cert-hash sha256:"{{kubeadm_ca_hash.stdout}}" --control-plane --certificate-key "{{temp_cert.stdout}}"'
  register: kubeadm_join
  when:
    - inventory_hostname in groups['master']
    - not kubeadm_ca.stat.exists
  become: yes
